apiVersion: rbac-manager.k8smgmt.io/v1
kind: RBACPolicy
metadata:
  labels:
    app.kubernetes.io/name: rbacpolicy
    app.kubernetes.io/instance: rbacpolicy-sample
    app.kubernetes.io/part-of: rbac-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: rbac-manager
  name: tc007-custom-rbac
spec:
  version: 1.0.0
  namespaceCreatePolicy: "IfNotPresent" # (or) "Never"
  customClusterRoles:
    - name: edit
      # rbac-tool gen 
      #  --generated-type=ClusterRole \
      #  --allowed-verbs=get,list,watch,create,update,patch,delete \
      #  --allowed-groups=,admissionregistration.k8s.io,storage.k8s.io,networking.k8s.io \
      #  --deny-resources=secrets.,services.
      shared: false
      denyResources:
        - services
        - secrets
      allowedVerbs:
        - get
        - list
        - watch
        - create
        - update
        - patch
        - delete
      allowedGroups:
        - ""
        - admissionregistration.k8s.io
        - storage.k8s.io
        - networking.k8s.io
    - name: view
      # rbac-tool gen 
      #  --generated-type=ClusterRole \
      #  --allowed-verbs=get,list,watch
      #  --allowed-groups=,events.k8s.io,apps,networking.k8s.io
      #  --deny-resources=secrets.,services.
      shared: false
      denyResources:
        - services
        - secrets
      allowedVerbs:
        - get
        - list
        - watch
      allowedGroups:
        - ""
        - events.k8s.io
        - apps
        - networking.k8s.io
  customRoles:
    - name: edit
      # rbac-tool gen  --generated-type=Role \
      #  --allowed-verbs='*' \
      #  --allowed-groups=,events.k8s.io,apps,networking.k8s.io \
      #  --deny-resources=secrets.,services.
      shared: true
      namespaceSelector:
        matchLabels:
          key1: value1
        matchExpressions:
          - {key: name, operator: In, values: [payroll, web]}
          - {key: environment, operator: NotIn, values: [dev]}
      allowedVerbs:
        - "*" # All verbs
      denyResources:
        - services
        - secrets
      allowedGroups:
        - ""
        - events.k8s.io
        - apps
        - networking.k8s.io
  customRbacBindings:
    - name: bind-robot-sa
      subjects:
        - kind: ServiceAccount
          namespace: app
          name: robot
      clusterRoleBindings:
        - clusterRole: view
      roleBindings:
        - clusterRole: edit
          namespace: api
    - name: bind-human-sa
      subjects:
        - kind: ServiceAccount
          namespace: app
          name: human
      roleBindings:
        - role: edit
          namespaceSelector:
            matchLabels:
              key1: value1
            matchExpressions:
              - {key: name, operator: In, values: [payroll, web]}
              - {key: environment, operator: NotIn, values: [dev]}

---
# The section below is generated by the operator based on above spec
# Will be used to verify the generated output
# Do not apply this section to the cluster
---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
# metadata:
#   labels:
#     rbac-manager: k8smgmt
#   name: tc007-custom-rbac-edit
#   namespace: payroll-notdev
# rules:
# - apiGroups:
#   - ""
#   resources:
#   - bindings
#   - events
#   - configmaps
#   - endpoints
#   - serviceaccounts
#   - pods
#   - podtemplates
#   - resourcequotas
#   - persistentvolumeclaims
#   - replicationcontrollers
#   - limitranges
#   verbs:
#   - '*'
# - apiGroups:
#   - apps
#   resources:
#   - deployments
#   - daemonsets
#   - controllerrevisions
#   - replicasets
#   - statefulsets
#   verbs:
#   - '*'
# - apiGroups:
#   - events.k8s.io
#   resources:
#   - events
#   verbs:
#   - '*'
# - apiGroups:
#   - networking.k8s.io
#   resources:
#   - ingresses
#   - networkpolicies
#   verbs:
#   - '*'

# ---

# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   labels:
#     rbac-manager: k8smgmt
#   name: tc007-custom-rbac-edit
# rules:
# - apiGroups:
#   - ""
#   resources:
#   - namespaces
#   - componentstatuses
#   - replicationcontrollers
#   - nodes
#   - podtemplates
#   - persistentvolumeclaims
#   - persistentvolumes
#   - bindings
#   - endpoints
#   - resourcequotas
#   - pods
#   - configmaps
#   - serviceaccounts
#   - events
#   - limitranges
#   verbs:
#   - create
#   - delete
#   - get
#   - list
#   - patch
#   - update
#   - watch
# - apiGroups:
#   - networking.k8s.io
#   resources:
#   - ingresses
#   - networkpolicies
#   - ingressclasses
#   verbs:
#   - create
#   - delete
#   - get
#   - list
#   - patch
#   - update
#   - watch
# - apiGroups:
#   - storage.k8s.io
#   resources:
#   - csistoragecapacities
#   - csidrivers
#   - csinodes
#   - storageclasses
#   - volumeattachments
#   verbs:
#   - create
#   - delete
#   - get
#   - list
#   - patch
#   - update
#   - watch
# - apiGroups:
#   - admissionregistration.k8s.io
#   resources:
#   - validatingwebhookconfigurations
#   - mutatingwebhookconfigurations
#   verbs:
#   - create
#   - delete
#   - get
#   - list
#   - patch
#   - update
#   - watch

# ---

# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   labels:
#     rbac-manager: k8smgmt
#   name: tc007-custom-rbac-view
# rules:
# - apiGroups:
#   - ""
#   resources:
#   - endpoints
#   - namespaces
#   - events
#   - resourcequotas
#   - pods
#   - bindings
#   - serviceaccounts
#   - componentstatuses
#   - persistentvolumes
#   - nodes
#   - podtemplates
#   - limitranges
#   - persistentvolumeclaims
#   - configmaps
#   - replicationcontrollers
#   verbs:
#   - get
#   - list
#   - watch
# - apiGroups:
#   - apps
#   resources:
#   - controllerrevisions
#   - deployments
#   - replicasets
#   - statefulsets
#   - daemonsets
#   verbs:
#   - get
#   - list
#   - watch
# - apiGroups:
#   - events.k8s.io
#   resources:
#   - events
#   verbs:
#   - get
#   - list
#   - watch
# - apiGroups:
#   - networking.k8s.io
#   resources:
#   - networkpolicies
#   - ingressclasses
#   - ingresses
#   verbs:
#   - get
#   - list
#   - watch

# ---

# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   labels:
#     rbac-manager: k8smgmt
#   name: tc007-custom-rbac-bind-robot-sa-view
# subjects:
# - kind: ServiceAccount
#   namespace: app
#   name: robot
# roleRef:
#   kind: ClusterRole
#   name: tc007-custom-rbac-view
#   apiGroup: rbac.authorization.k8s.io

# ---

# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   labels:
#     rbac-manager: k8smgmt
#   name: tc007-custom-rbac-bind-robot-sa-edit
#   namespace: api
# subjects:
# - kind: ServiceAccount
#   namespace: app
#   name: robot
# roleRef:
#   kind: ClusterRole
#   name: tc007-custom-rbac-edit
#   apiGroup: rbac.authorization.k8s.io

# ---

# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   labels:
#     rbac-manager: k8smgmt
#   name: tc007-custom-rbac-bind-human-sa-edit
#   namespace: web-notdev
# subjects:
# - kind: ServiceAccount
#   namespace: app
#   name: human
# roleRef:
#   kind: Role
#   name: tc007-custom-rbac-edit
#   apiGroup: rbac.authorization.k8s.io

# ---

# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   labels:
#     rbac-manager: k8smgmt
#   name: tc007-custom-rbac-bind-human-sa-edit
#   namespace: payroll-notdev
# subjects:
# - kind: ServiceAccount
#   namespace: app
#   name: human
# roleRef:
#   kind: Role
#   name: tc007-custom-rbac-edit
#   apiGroup: rbac.authorization.k8s.io